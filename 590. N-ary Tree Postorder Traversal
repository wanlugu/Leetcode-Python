Given an n-ary tree, return the postorder traversal of its nodes' values.

For example, given a 3-ary tree:
 
Return its postorder traversal as: [5,6,3,2,4,1].
 
Note: Recursive solution is trivial, could you do it iteratively?

"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, children):
        self.val = val
        self.children = children
"""
class Solution2(object):
   def postorder(self,tree):
        data = []

        def recurse(node)
           if not node:
               return
           recurse(node.left)
           recurse(node.right)
           data.append(node.data)

        recurse(tree)
        return data
 #The inner function recurse takes care of traversing over the tree and the data is automatically added to data.
